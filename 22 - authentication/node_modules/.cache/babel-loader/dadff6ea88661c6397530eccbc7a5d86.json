{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\UDEMY\\\\React\\\\22 - authentication\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInput = useRef();\n  const passwordInput = useRef();\n  const [hasError, setHasError] = useState(\"\");\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    const enteredEmail = emailInput.current.value;\n    const enteredPassword = passwordInput.current.value;\n\n    //optional : Add Validation\n    if (isLogin) {} else {\n      //Sign Up\n      /* fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByL9lBTVIdtPoBJP2a9aCknxYxuR_C5MY\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: { \"content-Type\": \"application/json\" },\n        }\n      ).then((res) => {\n        if (res.ok) {\n        } else {\n          return res.json().then((data) => {\n            console.log(data);\n          });\n        }\n      }); */\n\n      try {\n        const response = await fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByL9lBTVIdtPoBJP2a9aCknxYxuR_C5MY\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true\n          }),\n          headers: {\n            \"content-Type\": \"application/json\"\n          }\n        });\n        console.log(response);\n        const data = await response.json();\n        if (!response.ok) {\n          let errorMessage = \"Authentication failed\";\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n          throw new Error(errorMessage);\n        }\n        console.log(data);\n      } catch (error) {\n        const newErrorFormated = error.message.replace(\"_\", \" \");\n        setHasError(newErrorFormated);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: hasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"rGsvIwEKivSd5R6OYv7zRQs5NDM=\");\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useRef","useState","classes","AuthForm","isLogin","setIsLogin","emailInput","passwordInput","hasError","setHasError","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","response","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","console","log","data","json","ok","errorMessage","error","message","Error","newErrorFormated","replace","auth","color","control","actions","toggle"],"sources":["C:/Users/alexa/Documents/UDEMY/React/22 - authentication/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailInput = useRef();\n  const passwordInput = useRef();\n  const [hasError, setHasError] = useState(\"\");\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    const enteredEmail = emailInput.current.value;\n    const enteredPassword = passwordInput.current.value;\n\n    //optional : Add Validation\n    if (isLogin) {\n    } else {\n      //Sign Up\n      /* fetch(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByL9lBTVIdtPoBJP2a9aCknxYxuR_C5MY\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email: enteredEmail,\n            password: enteredPassword,\n            returnSecureToken: true,\n          }),\n          headers: { \"content-Type\": \"application/json\" },\n        }\n      ).then((res) => {\n        if (res.ok) {\n        } else {\n          return res.json().then((data) => {\n            console.log(data);\n          });\n        }\n      }); */\n\n      try {\n        const response = await fetch(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByL9lBTVIdtPoBJP2a9aCknxYxuR_C5MY\",\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              email: enteredEmail,\n              password: enteredPassword,\n              returnSecureToken: true,\n            }),\n            headers: { \"content-Type\": \"application/json\" },\n          }\n        );\n\n        console.log(response);\n        const data = await response.json();\n        if (!response.ok) {\n          let errorMessage = \"Authentication failed\";\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n          throw new Error(errorMessage);\n        }\n\n        console.log(data);\n      } catch (error) {\n        const newErrorFormated = error.message.replace(\"_\", \" \");\n        setHasError(newErrorFormated);\n      }\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      {hasError && <p style={{ color: \"red\" }}>{hasError}</p>}\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInput} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required ref={passwordInput} />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}