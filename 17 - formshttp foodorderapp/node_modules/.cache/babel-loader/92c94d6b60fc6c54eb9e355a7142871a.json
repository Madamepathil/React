{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\UDEMY\\\\React\\\\17 - formshttp foodorderapp\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState } from \"react\";\n/* const DUMMY_MEALS = [\n  {\n    id: 'm1',\n    name: 'Sushi',\n    description: 'Finest fish and veggies',\n    price: 22.99,\n  },\n  {\n    id: 'm2',\n    name: 'Schnitzel',\n    description: 'A german specialty!',\n    price: 16.5,\n  },\n  {\n    id: 'm3',\n    name: 'Barbecue Burger',\n    description: 'American, raw, meaty',\n    price: 12.99,\n  },\n  {\n    id: 'm4',\n    name: 'Green Bowl',\n    description: 'Healthy...and green...',\n    price: 18.99,\n  },\n]; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const request = await fetch(\"https://http-reac-default-rtdb.firebaseio.com/meals.json\");\n        if (!request.ok) throw new Error(\"problem fetching data from server\");\n        const responseData = await request.json();\n        const loadedMeals = [];\n\n        for (const key in responseData) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price\n          });\n        }\n\n        setMeals(loadedMeals);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoding,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Iiz9r13wHP3oUKY8Pc8nCUik7ZA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchData","request","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","message","mealsLoding","mealsList","map","meal"],"sources":["C:/Users/alexa/Documents/UDEMY/React/17 - formshttp foodorderapp/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useEffect, useState } from \"react\";\n\n/* const DUMMY_MEALS = [\n  {\n    id: 'm1',\n    name: 'Sushi',\n    description: 'Finest fish and veggies',\n    price: 22.99,\n  },\n  {\n    id: 'm2',\n    name: 'Schnitzel',\n    description: 'A german specialty!',\n    price: 16.5,\n  },\n  {\n    id: 'm3',\n    name: 'Barbecue Burger',\n    description: 'American, raw, meaty',\n    price: 12.99,\n  },\n  {\n    id: 'm4',\n    name: 'Green Bowl',\n    description: 'Healthy...and green...',\n    price: 18.99,\n  },\n]; */\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const request = await fetch(\n          \"https://http-reac-default-rtdb.firebaseio.com/meals.json\"\n        );\n\n        if (!request.ok) throw new Error(\"problem fetching data from server\");\n\n        const responseData = await request.json();\n\n        const loadedMeals = [];\n        for (const key in responseData) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price,\n          });\n        }\n\n        setMeals(loadedMeals);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={classes.mealsLoding}>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,YAAY;MAC5B,IAAI;QACFH,YAAY,CAAC,IAAD,CAAZ;QACA,MAAMI,OAAO,GAAG,MAAMC,KAAK,CACzB,0DADyB,CAA3B;QAIA,IAAI,CAACD,OAAO,CAACE,EAAb,EAAiB,MAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;QAEjB,MAAMC,YAAY,GAAG,MAAMJ,OAAO,CAACK,IAAR,EAA3B;QAEA,MAAMC,WAAW,GAAG,EAApB;;QACA,KAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;UAC9BE,WAAW,CAACE,IAAZ,CAAiB;YACfC,EAAE,EAAEF,GADW;YAEfG,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;YAGfC,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;YAIfC,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;UAJV,CAAjB;QAMD;;QAEDlB,QAAQ,CAACY,WAAD,CAAR;QACAV,YAAY,CAAC,KAAD,CAAZ;MACD,CAtBD,CAsBE,OAAOC,KAAP,EAAc;QACdC,QAAQ,CAACD,KAAK,CAACgB,OAAP,CAAR;MACD;IACF,CA1BD;;IA4BAd,SAAS;EACV,CA9BQ,EA8BN,EA9BM,CAAT;;EAgCA,IAAIJ,SAAJ,EAAe;IACb,oBACE;MAAS,SAAS,EAAEN,OAAO,CAACyB,WAA5B;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,MAAMC,SAAS,GAAGtB,KAAK,CAACuB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;IAEE,EAAE,EAAEA,IAAI,CAACR,EAFX;IAGE,IAAI,EAAEQ,IAAI,CAACP,IAHb;IAIE,WAAW,EAAEO,IAAI,CAACN,WAJpB;IAKE,KAAK,EAAEM,IAAI,CAACL;EALd,GACOK,IAAI,CAACR,EADZ;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EAUA,oBACE;IAAS,SAAS,EAAEpB,OAAO,CAACI,KAA5B;IAAA,uBACE,QAAC,IAAD;MAAA,uBACE;QAAA,UAAKsB;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA9DD;;GAAMvB,c;;KAAAA,c;AAgEN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}