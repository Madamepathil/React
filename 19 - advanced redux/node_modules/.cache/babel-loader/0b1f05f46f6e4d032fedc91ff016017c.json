{"ast":null,"code":"import { cartActions } from \"./cartSlice\";\nimport { uiActions } from \"./uiSlice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://http-reac-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!response.ok) {\n        throw new Error(\"could not fecth cart data\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotifications({\n        status: \"error\",\n        title: \"Error..\",\n        message: \"fetching cart data failed\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotifications({\n      status: \"pending\",\n      title: \"sending..\",\n      message: \"sending cart data\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://http-reac-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\" sending cart data failed\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotifications({\n        status: \"success\",\n        title: \"Sucess..\",\n        message: \"sending cart data succesfully\"\n      }));\n    } catch (error) {\n      sendCartData().catch(err => {\n        dispatch(uiActions.showNotifications({\n          status: \"error\",\n          title: \"Error..\",\n          message: \"sending cart data failed\"\n        }));\n      });\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotifications","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","items","totalQuantity","catch","err"],"sources":["C:/Users/alexa/Documents/UDEMY/React/19 - advanced redux/src/store/cartActions.js"],"sourcesContent":["import { cartActions } from \"./cartSlice\";\r\nimport { uiActions } from \"./uiSlice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async (dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://http-reac-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"could not fecth cart data\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const cartData = await fetchData();\r\n      dispatch(cartActions.replaceCart(cartData));\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotifications({\r\n          status: \"error\",\r\n          title: \"Error..\",\r\n          message: \"fetching cart data failed\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotifications({\r\n        status: \"pending\",\r\n        title: \"sending..\",\r\n        message: \"sending cart data\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://http-reac-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            items: cart.items,\r\n            totalQuantity: cart.totalQuantity,\r\n          }),\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\" sending cart data failed\");\r\n      }\r\n    };\r\n\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotifications({\r\n          status: \"success\",\r\n          title: \"Sucess..\",\r\n          message: \"sending cart data succesfully\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      sendCartData().catch((err) => {\r\n        dispatch(\r\n          uiActions.showNotifications({\r\n            status: \"error\",\r\n            title: \"Error..\",\r\n            message: \"sending cart data failed\",\r\n          })\r\n        );\r\n      });\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMC,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yDAD0B,CAA5B;;MAIA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MAEA,OAAOD,IAAP;IACD,CAXD;;IAaA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;MACAD,QAAQ,CAACH,WAAW,CAACY,WAAZ,CAAwBD,QAAxB,CAAD,CAAR;IACD,CAHD,CAGE,OAAOE,KAAP,EAAc;MACdV,QAAQ,CACNF,SAAS,CAACa,iBAAV,CAA4B;QAC1BC,MAAM,EAAE,OADkB;QAE1BC,KAAK,EAAE,SAFmB;QAG1BC,OAAO,EAAE;MAHiB,CAA5B,CADM,CAAR;IAOD;EACF,CA1BD;AA2BD,CA5BM;AA8BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;EACpC,OAAO,MAAOhB,QAAP,IAAoB;IACzBA,QAAQ,CACNF,SAAS,CAACa,iBAAV,CAA4B;MAC1BC,MAAM,EAAE,SADkB;MAE1BC,KAAK,EAAE,WAFmB;MAG1BC,OAAO,EAAE;IAHiB,CAA5B,CADM,CAAR;;IAQA,MAAMG,WAAW,GAAG,YAAY;MAC9B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yDAD0B,EAE1B;QACEe,MAAM,EAAE,KADV;QAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,KAAK,EAAEN,IAAI,CAACM,KADO;UAEnBC,aAAa,EAAEP,IAAI,CAACO;QAFD,CAAf;MAFR,CAF0B,CAA5B;;MAUA,IAAI,CAACrB,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;MACD;IACF,CAdD;;IAgBA,IAAI;MACF,MAAMY,WAAW,EAAjB;MACAjB,QAAQ,CACNF,SAAS,CAACa,iBAAV,CAA4B;QAC1BC,MAAM,EAAE,SADkB;QAE1BC,KAAK,EAAE,UAFmB;QAG1BC,OAAO,EAAE;MAHiB,CAA5B,CADM,CAAR;IAOD,CATD,CASE,OAAOJ,KAAP,EAAc;MACdK,YAAY,GAAGS,KAAf,CAAsBC,GAAD,IAAS;QAC5BzB,QAAQ,CACNF,SAAS,CAACa,iBAAV,CAA4B;UAC1BC,MAAM,EAAE,OADkB;UAE1BC,KAAK,EAAE,SAFmB;UAG1BC,OAAO,EAAE;QAHiB,CAA5B,CADM,CAAR;MAOD,CARD;IASD;EACF,CA7CD;AA8CD,CA/CM"},"metadata":{},"sourceType":"module"}