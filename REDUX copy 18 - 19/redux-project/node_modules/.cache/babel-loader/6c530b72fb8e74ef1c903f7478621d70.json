{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { act } from \"react-dom/test-utils\";\n\n//förbereder en slice av vår globala state\n//du behöver inte ta hänsyns till andra states\n//immer tar hand om uppdateringen\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state, action) {\n      state.counter++;\n    },\n    decrement(state, action) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state, action) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type == \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type == \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type == \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type == \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","act","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","action","decrement","increase","amount","toggleCounter","counterReducer","type","store"],"sources":["C:/Users/alexa/Documents/UDEMY/React/REDUX copy 18 - 19/redux-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\n//förbereder en slice av vår globala state\r\n//du behöver inte ta hänsyns till andra states\r\n//immer tar hand om uppdateringen\r\nconst initialState = { counter: 0, showCounter: true };\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    increment(state, action) {\r\n      state.counter++;\r\n    },\r\n    decrement(state, action) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    toggleCounter(state, action) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type == \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type == \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\nconst store = createStore(counterReducer);\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,QAAQ,sBAAsB;;AAE1C;AACA;AACA;AACA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AACtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,SAAS,CAACF,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDS,QAAQ,CAACH,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACG,MAAM;IAC/C,CAAC;IACDC,aAAa,CAACL,KAAK,EAAEC,MAAM,EAAE;MAC3BD,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,cAAc,GAAG,YAAkC;EAAA,IAAjCN,KAAK,uEAAGP,YAAY;EAAA,IAAEQ,MAAM;EAClD,IAAIA,MAAM,CAACM,IAAI,IAAI,WAAW,EAAE;IAC9B,OAAO;MACLb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIM,MAAM,CAACM,IAAI,IAAI,UAAU,EAAE;IAC7B,OAAO;MACLb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACG,MAAM;MACtCT,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EACA,IAAIM,MAAM,CAACM,IAAI,IAAI,WAAW,EAAE;IAC9B,OAAO;MACLb,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIM,MAAM,CAACM,IAAI,IAAI,QAAQ,EAAE;IAC3B,OAAO;MACLb,OAAO,EAAEM,KAAK,CAACN,OAAO;MACtBC,WAAW,EAAE,CAACK,KAAK,CAACL;IACtB,CAAC;EACH;EAEA,OAAOK,KAAK;AACd,CAAC;AACD,MAAMQ,KAAK,GAAGlB,WAAW,CAACgB,cAAc,CAAC;AACzC,eAAeE,KAAK"},"metadata":{},"sourceType":"module"}