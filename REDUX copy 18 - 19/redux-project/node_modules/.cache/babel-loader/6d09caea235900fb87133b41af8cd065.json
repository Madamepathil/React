{"ast":null,"code":"import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { act } from \"react-dom/test-utils\";\nimport counterSlice from \"./counterSlice\";\nimport authSlice from \"./authSlice\";\n\n/* const counterReducer = (state = initialState, action) => {\r\n  if (action.type == \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type == \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}; */\n\n//cpnfigure store = value för store\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","configureStore","act","counterSlice","authSlice","counterActions","actions","authActions","store","reducer","counter","auth"],"sources":["C:/Users/alexa/Documents/UDEMY/React/REDUX copy 18 - 19/redux-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport counterSlice from \"./counterSlice\";\r\nimport authSlice from \"./authSlice\";\r\n\r\n/* const counterReducer = (state = initialState, action) => {\r\n  if (action.type == \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type == \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}; */\r\n\r\n//cpnfigure store = value för store\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAACG,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACE,OAAO;AAE5C,MAAME,KAAK,GAAGP,cAAc,CAAC;EAC3BQ,OAAO,EAAE;IAAEC,OAAO,EAAEP,YAAY,CAACM,OAAO;IAAEE,IAAI,EAAEP,SAAS,CAACK;EAAQ;AACpE,CAAC,CAAC;AACF,eAAeD,KAAK"},"metadata":{},"sourceType":"module"}