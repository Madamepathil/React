{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { act } from \"react-dom/test-utils\";\n\n//förbereder en slice av vår globala state\n//du behöver inte ta hänsyns till andra states\n//immer tar hand om uppdateringen\n\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"Auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state, action) {\n      state.isAuthenticated = true;\n    },\n    logout(state, action) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n/* const counterReducer = (state = initialState, action) => {\r\n  if (action.type == \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type == \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}; */\n\n//cpnfigure store = value för store\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","act","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","action","logout","counterActions","counterSlice","actions","authActions","store","reducer","counter","auth"],"sources":["C:/Users/alexa/Documents/UDEMY/React/REDUX copy 18 - 19/redux-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\n//förbereder en slice av vår globala state\r\n//du behöver inte ta hänsyns till andra states\r\n//immer tar hand om uppdateringen\r\n\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n};\r\nconst authSlice = createSlice({\r\n  name: \"Auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state, action) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n/* const counterReducer = (state = initialState, action) => {\r\n  if (action.type == \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type == \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type == \"toggle\") {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}; */\r\n\r\n//cpnfigure store = value för store\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D,SAASC,GAAG,QAAQ,sBAAsB;;AAE1C;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AACnB,CAAC;AACD,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,KAAK,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACN,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDQ,MAAM,CAACF,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACN,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,MAAMS,cAAc,GAAGC,YAAY,CAACC,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGX,SAAS,CAACU,OAAO;AAE5C,MAAME,KAAK,GAAGhB,cAAc,CAAC;EAC3BiB,OAAO,EAAE;IAAEC,OAAO,EAAEL,YAAY,CAACI,OAAO;IAAEE,IAAI,EAAEf,SAAS,CAACa;EAAQ;AACpE,CAAC,CAAC;AACF,eAAeD,KAAK"},"metadata":{},"sourceType":"module"}