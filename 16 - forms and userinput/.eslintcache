[{"C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\index.js":"1","C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\App.js":"2","C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\components\\SimpleInput.js":"3","C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\hooks\\useInput.js":"4","C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\components\\BasicForm.js":"5","C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\hooks\\useInput2.js":"6"},{"size":179,"mtime":1648643023000,"results":"7","hashOfConfig":"8"},{"size":245,"mtime":1663707902158,"results":"9","hashOfConfig":"8"},{"size":2257,"mtime":1663707803067,"results":"10","hashOfConfig":"8"},{"size":699,"mtime":1663707833822,"results":"11","hashOfConfig":"8"},{"size":2921,"mtime":1664397737344,"results":"12","hashOfConfig":"8"},{"size":716,"mtime":1663757577727,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"exjti",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\index.js",[],["31","32"],"C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\App.js",["33"],"import BasicForm from \"./components/BasicForm\";\nimport SimpleInput from \"./components/SimpleInput\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/*  <SimpleInput /> */}\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\components\\SimpleInput.js",["34","35"],"import { useEffect, useState } from \"react\";\nimport { useInput } from \"../hooks/useInput\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  let formsIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formsIsValid = true;\n  }\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n    //const inputValue = nameInputRef.current.value;\n    resetNameInput();\n\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control \";\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control \";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be Empty</p>\n        )}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Email must include @</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button\n          disabled={!formsIsValid}\n          className={!formsIsValid ? \"btn-disabled\" : \"\"}\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\hooks\\useInput.js",["36"],"import React, { useState } from \"react\";\r\n\r\nexport const useInput = (validateValueFn) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValueFn(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (e) => {\r\n    setEnteredValue(e.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = (e) => {\r\n    setIsTouched(true);\r\n  };\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n","C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\components\\BasicForm.js",["37"],"C:\\Users\\alexa\\Documents\\UDEMY\\React\\16 - forms and userinput\\src\\hooks\\useInput2.js",["38"],"import React, { useState } from \"react\";\r\n\r\nconst useInput2 = (validateValueFn) => {\r\n  const [enteredValue, setenteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValueFn(enteredValue);\r\n\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (e) => {\r\n    setenteredValue(e.target.value);\r\n  };\r\n  const touchHandler = (e) => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setenteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    enteredValue,\r\n    isTouched,\r\n    valueChangeHandler,\r\n    touchHandler,\r\n    hasError,\r\n    valueIsValid,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput2;\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":19},{"ruleId":"43","severity":1,"message":"47","line":1,"column":10,"nodeType":"45","messageId":"46","endLine":1,"endColumn":19},{"ruleId":"43","severity":1,"message":"48","line":1,"column":21,"nodeType":"45","messageId":"46","endLine":1,"endColumn":29},{"ruleId":"43","severity":1,"message":"49","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":13},{"ruleId":"43","severity":1,"message":"48","line":1,"column":10,"nodeType":"45","messageId":"46","endLine":1,"endColumn":18},{"ruleId":"43","severity":1,"message":"49","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":13},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]